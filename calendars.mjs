import { BespokeCalendar, Brazil, Calendar, China, DateExt, Germany, Italy, Japan, JointCalendar, Russia, SouthKorea, TARGET, TimeUnit, UnitedKingdom, UnitedStates, Weekday, version } from 'https://cdn.jsdelivr.net/npm/@quantlib/ql@latest/ql.mjs';

describe(`Calendar tests ${version}`, () => {
    it('Testing calendar modification...', () => {
        const c1 = new TARGET();
        const c2 = new UnitedStates(UnitedStates.Market.NYSE);
        const d1 = DateExt.UTC('1,May,2004');
        const d2 = DateExt.UTC('26,April,2004');
        expect(c1.isHoliday(d1)).toEqual(true);
        expect(c1.isBusinessDay(d2)).toEqual(true);
        expect(c2.isHoliday(d1)).toEqual(true);
        expect(c2.isBusinessDay(d2)).toEqual(true);
        c1.removeHoliday(d1);
        c1.addHoliday(d2);
        expect(c1.isHoliday(d1)).toEqual(false);
        expect(c1.isBusinessDay(d2)).toEqual(false);
        const c3 = new TARGET();
        expect(c3.isHoliday(d1)).toEqual(false);
        expect(c3.isBusinessDay(d2)).toEqual(false);
        expect(c2.isBusinessDay(d1)).toEqual(false);
        expect(c2.isHoliday(d2)).toEqual(false);
        c3.addHoliday(d1);
        c3.removeHoliday(d2);
        expect(c1.isBusinessDay(d1)).toEqual(false);
        expect(c1.isHoliday(d2)).toEqual(false);
    });

    it('Testing joint calendars...', () => {
        const c1 = new TARGET(), c2 = new UnitedKingdom(), c3 = new UnitedStates(UnitedStates.Market.NYSE), c4 = new Japan();
        const c12h = new JointCalendar(c1, c2, null, null, JointCalendar.JointCalendarRule.JoinHolidays), c12b = new JointCalendar(c1, c2, null, null, JointCalendar.JointCalendarRule.JoinBusinessDays), c123h = new JointCalendar(c1, c2, c3, null, JointCalendar.JointCalendarRule.JoinHolidays), c123b = new JointCalendar(c1, c2, c3, null, JointCalendar.JointCalendarRule.JoinBusinessDays), c1234h = new JointCalendar(c1, c2, c3, c4, JointCalendar.JointCalendarRule.JoinHolidays), c1234b = new JointCalendar(c1, c2, c3, c4, JointCalendar.JointCalendarRule.JoinBusinessDays);
        const firstDate = DateExt.universalDateTime(), endDate = DateExt.advance(firstDate, 1, TimeUnit.Years);
        for (const d = firstDate; d.valueOf() < endDate.valueOf(); DateExt.adda(d, 1)) {
            const b1 = c1.isBusinessDay(d), b2 = c2.isBusinessDay(d), b3 = c3.isBusinessDay(d), b4 = c4.isBusinessDay(d);
            expect((b1 && b2)).toEqual(c12h.isBusinessDay(d));
            expect((b1 || b2)).toEqual(c12b.isBusinessDay(d));
            expect((b1 && b2 && b3)).toEqual(c123h.isBusinessDay(d));
            expect((b1 || b2 || b3)).toEqual(c123b.isBusinessDay(d));
            expect((b1 && b2 && b3 && b4)).toEqual(c1234h.isBusinessDay(d));
            expect((b1 || b2 || b3 || b4)).toEqual(c1234b.isBusinessDay(d));
        }
    });

    it('Testing US settlement holiday list...', () => {
        let expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('19,January,2004'));
        expectedHol.push(DateExt.UTC('16,February,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('5,July,2004'));
        expectedHol.push(DateExt.UTC('6,September,2004'));
        expectedHol.push(DateExt.UTC('11,October,2004'));
        expectedHol.push(DateExt.UTC('11,November,2004'));
        expectedHol.push(DateExt.UTC('25,November,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        expectedHol.push(DateExt.UTC('17,January,2005'));
        expectedHol.push(DateExt.UTC('21,February,2005'));
        expectedHol.push(DateExt.UTC('30,May,2005'));
        expectedHol.push(DateExt.UTC('4,July,2005'));
        expectedHol.push(DateExt.UTC('5,September,2005'));
        expectedHol.push(DateExt.UTC('10,October,2005'));
        expectedHol.push(DateExt.UTC('11,November,2005'));
        expectedHol.push(DateExt.UTC('24,November,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        const c = new UnitedStates(UnitedStates.Market.Settlement);
        let hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December, 2005'));
        expect(hol.length).toEqual(expectedHol.length);
        for (let i = 0; i < hol.length; i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expectedHol = [];
        expectedHol.push(DateExt.UTC('2,January,1961'));
        expectedHol.push(DateExt.UTC('22,February,1961'));
        expectedHol.push(DateExt.UTC('30,May,1961'));
        expectedHol.push(DateExt.UTC('4,July,1961'));
        expectedHol.push(DateExt.UTC('4,September,1961'));
        expectedHol.push(DateExt.UTC('10,November,1961'));
        expectedHol.push(DateExt.UTC('23,November,1961'));
        expectedHol.push(DateExt.UTC('25,December,1961'));
        hol = Calendar.holidayList(c, DateExt.UTC('1,January,1961'), DateExt.UTC('31,December,1961'));
        expect(hol.length).toEqual(expectedHol.length);
        for (let i = 0; i < hol.length; i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
    });

    it('Testing US government bond market holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('19,January,2004'));
        expectedHol.push(DateExt.UTC('16,February,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('5,July,2004'));
        expectedHol.push(DateExt.UTC('6,September,2004'));
        expectedHol.push(DateExt.UTC('11,October,2004'));
        expectedHol.push(DateExt.UTC('11,November,2004'));
        expectedHol.push(DateExt.UTC('25,November,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        const c = new UnitedStates(UnitedStates.Market.GovernmentBond);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2004'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing New York Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('19,January,2004'));
        expectedHol.push(DateExt.UTC('16,February,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('11,June,2004'));
        expectedHol.push(DateExt.UTC('5,July,2004'));
        expectedHol.push(DateExt.UTC('6,September,2004'));
        expectedHol.push(DateExt.UTC('25,November,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('17,January,2005'));
        expectedHol.push(DateExt.UTC('21,February,2005'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('30,May,2005'));
        expectedHol.push(DateExt.UTC('4,July,2005'));
        expectedHol.push(DateExt.UTC('5,September,2005'));
        expectedHol.push(DateExt.UTC('24,November,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        expectedHol.push(DateExt.UTC('2,January,2006'));
        expectedHol.push(DateExt.UTC('16,January,2006'));
        expectedHol.push(DateExt.UTC('20,February,2006'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('29,May,2006'));
        expectedHol.push(DateExt.UTC('4,July,2006'));
        expectedHol.push(DateExt.UTC('4,September,2006'));
        expectedHol.push(DateExt.UTC('23,November,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        const c = new UnitedStates(UnitedStates.Market.NYSE);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2006'));
        let i;
        for (i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
        const histClose = [];
        histClose.push(DateExt.UTC('30,October,2012'));
        histClose.push(DateExt.UTC('29,October,2012'));
        histClose.push(DateExt.UTC('11,June,2004'));
        histClose.push(DateExt.UTC('14,September,2001'));
        histClose.push(DateExt.UTC('13,September,2001'));
        histClose.push(DateExt.UTC('12,September,2001'));
        histClose.push(DateExt.UTC('11,September,2001'));
        histClose.push(DateExt.UTC('27,April,1994'));
        histClose.push(DateExt.UTC('27,September,1985'));
        histClose.push(DateExt.UTC('14,July,1977'));
        histClose.push(DateExt.UTC('25,January,1973'));
        histClose.push(DateExt.UTC('28,December,1972'));
        histClose.push(DateExt.UTC('21,July,1969'));
        histClose.push(DateExt.UTC('31,March,1969'));
        histClose.push(DateExt.UTC('10,February,1969'));
        histClose.push(DateExt.UTC('5,July,1968'));
        histClose.push(DateExt.UTC('9,April,1968'));
        histClose.push(DateExt.UTC('24,December,1965'));
        histClose.push(DateExt.UTC('25,November,1963'));
        histClose.push(DateExt.UTC('29,May,1961'));
        histClose.push(DateExt.UTC('26,December,1958'));
        histClose.push(DateExt.UTC('24,December,1956'));
        histClose.push(DateExt.UTC('24,December,1954'));
        histClose.push(DateExt.UTC('12,Jun,1968'));
        histClose.push(DateExt.UTC('19,Jun,1968'));
        histClose.push(DateExt.UTC('26,Jun,1968'));
        histClose.push(DateExt.UTC('3,Jul,1968'));
        histClose.push(DateExt.UTC('10,Jul,1968'));
        histClose.push(DateExt.UTC('17,Jul,1968'));
        histClose.push(DateExt.UTC('20,Nov,1968'));
        histClose.push(DateExt.UTC('27,Nov,1968'));
        histClose.push(DateExt.UTC('4,Dec,1968'));
        histClose.push(DateExt.UTC('11,Dec,1968'));
        histClose.push(DateExt.UTC('18,Dec,1968'));
        histClose.push(DateExt.UTC('4,Nov,1980'));
        histClose.push(DateExt.UTC('2,Nov,1976'));
        histClose.push(DateExt.UTC('7,Nov,1972'));
        histClose.push(DateExt.UTC('5,Nov,1968'));
        histClose.push(DateExt.UTC('3,Nov,1964'));
        for (i = 0; i < histClose.length; i++) {
            expect(c.isHoliday(histClose[i])).toBeTruthy();
        }
    });

    it('Testing TARGET holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,1999'));
        expectedHol.push(DateExt.UTC('31,December,1999'));
        expectedHol.push(DateExt.UTC('21,April,2000'));
        expectedHol.push(DateExt.UTC('24,April,2000'));
        expectedHol.push(DateExt.UTC('1,May,2000'));
        expectedHol.push(DateExt.UTC('25,December,2000'));
        expectedHol.push(DateExt.UTC('26,December,2000'));
        expectedHol.push(DateExt.UTC('1,January,2001'));
        expectedHol.push(DateExt.UTC('13,April,2001'));
        expectedHol.push(DateExt.UTC('16,April,2001'));
        expectedHol.push(DateExt.UTC('1,May,2001'));
        expectedHol.push(DateExt.UTC('25,December,2001'));
        expectedHol.push(DateExt.UTC('26,December,2001'));
        expectedHol.push(DateExt.UTC('31,December,2001'));
        expectedHol.push(DateExt.UTC('1,January,2002'));
        expectedHol.push(DateExt.UTC('29,March,2002'));
        expectedHol.push(DateExt.UTC('1,April,2002'));
        expectedHol.push(DateExt.UTC('1,May,2002'));
        expectedHol.push(DateExt.UTC('25,December,2002'));
        expectedHol.push(DateExt.UTC('26,December,2002'));
        expectedHol.push(DateExt.UTC('1,January,2003'));
        expectedHol.push(DateExt.UTC('18,April,2003'));
        expectedHol.push(DateExt.UTC('21,April,2003'));
        expectedHol.push(DateExt.UTC('1,May,2003'));
        expectedHol.push(DateExt.UTC('25,December,2003'));
        expectedHol.push(DateExt.UTC('26,December,2003'));
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('28,March,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('17,April,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('26,December,2006'));
        const c = new TARGET();
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,1999'), DateExt.UTC('31,December,2006'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
    });

    it('Testing Frankfurt Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2003'));
        expectedHol.push(DateExt.UTC('18,April,2003'));
        expectedHol.push(DateExt.UTC('21,April,2003'));
        expectedHol.push(DateExt.UTC('1,May,2003'));
        expectedHol.push(DateExt.UTC('24,December,2003'));
        expectedHol.push(DateExt.UTC('25,December,2003'));
        expectedHol.push(DateExt.UTC('26,December,2003'));
        expectedHol.push(DateExt.UTC('31,December,2003'));
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        const c = new Germany(Germany.Market.FrankfurtStockExchange);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2003'), DateExt.UTC('31,December,2004'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Eurex holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2003'));
        expectedHol.push(DateExt.UTC('18,April,2003'));
        expectedHol.push(DateExt.UTC('21,April,2003'));
        expectedHol.push(DateExt.UTC('1,May,2003'));
        expectedHol.push(DateExt.UTC('24,December,2003'));
        expectedHol.push(DateExt.UTC('25,December,2003'));
        expectedHol.push(DateExt.UTC('26,December,2003'));
        expectedHol.push(DateExt.UTC('31,December,2003'));
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        const c = new Germany(Germany.Market.Eurex);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2003'), DateExt.UTC('31,December,2004'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Xetra holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2003'));
        expectedHol.push(DateExt.UTC('18,April,2003'));
        expectedHol.push(DateExt.UTC('21,April,2003'));
        expectedHol.push(DateExt.UTC('1,May,2003'));
        expectedHol.push(DateExt.UTC('24,December,2003'));
        expectedHol.push(DateExt.UTC('25,December,2003'));
        expectedHol.push(DateExt.UTC('26,December,2003'));
        expectedHol.push(DateExt.UTC('31,December,2003'));
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        const c = new Germany(Germany.Market.Xetra);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2003'), DateExt.UTC('31,December,2004'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing UK settlement holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('3,May,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('30,August,2004'));
        expectedHol.push(DateExt.UTC('27,December,2004'));
        expectedHol.push(DateExt.UTC('28,December,2004'));
        expectedHol.push(DateExt.UTC('3,January,2005'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('28,March,2005'));
        expectedHol.push(DateExt.UTC('2,May,2005'));
        expectedHol.push(DateExt.UTC('30,May,2005'));
        expectedHol.push(DateExt.UTC('29,August,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        expectedHol.push(DateExt.UTC('27,December,2005'));
        expectedHol.push(DateExt.UTC('2,January,2006'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('17,April,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('29,May,2006'));
        expectedHol.push(DateExt.UTC('28,August,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('26,December,2006'));
        expectedHol.push(DateExt.UTC('1,January,2007'));
        expectedHol.push(DateExt.UTC('6,April,2007'));
        expectedHol.push(DateExt.UTC('9,April,2007'));
        expectedHol.push(DateExt.UTC('7,May,2007'));
        expectedHol.push(DateExt.UTC('28,May,2007'));
        expectedHol.push(DateExt.UTC('27,August,2007'));
        expectedHol.push(DateExt.UTC('25,December,2007'));
        expectedHol.push(DateExt.UTC('26,December,2007'));
        const c = new UnitedKingdom(UnitedKingdom.Market.Settlement);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2007'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing London Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('3,May,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('30,August,2004'));
        expectedHol.push(DateExt.UTC('27,December,2004'));
        expectedHol.push(DateExt.UTC('28,December,2004'));
        expectedHol.push(DateExt.UTC('3,January,2005'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('28,March,2005'));
        expectedHol.push(DateExt.UTC('2,May,2005'));
        expectedHol.push(DateExt.UTC('30,May,2005'));
        expectedHol.push(DateExt.UTC('29,August,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        expectedHol.push(DateExt.UTC('27,December,2005'));
        expectedHol.push(DateExt.UTC('2,January,2006'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('17,April,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('29,May,2006'));
        expectedHol.push(DateExt.UTC('28,August,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('26,December,2006'));
        expectedHol.push(DateExt.UTC('1,January,2007'));
        expectedHol.push(DateExt.UTC('6,April,2007'));
        expectedHol.push(DateExt.UTC('9,April,2007'));
        expectedHol.push(DateExt.UTC('7,May,2007'));
        expectedHol.push(DateExt.UTC('28,May,2007'));
        expectedHol.push(DateExt.UTC('27,August,2007'));
        expectedHol.push(DateExt.UTC('25,December,2007'));
        expectedHol.push(DateExt.UTC('26,December,2007'));
        const c = new UnitedKingdom(UnitedKingdom.Market.Exchange);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2007'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing London Metals Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('3,May,2004'));
        expectedHol.push(DateExt.UTC('31,May,2004'));
        expectedHol.push(DateExt.UTC('30,August,2004'));
        expectedHol.push(DateExt.UTC('27,December,2004'));
        expectedHol.push(DateExt.UTC('28,December,2004'));
        expectedHol.push(DateExt.UTC('3,January,2005'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('28,March,2005'));
        expectedHol.push(DateExt.UTC('2,May,2005'));
        expectedHol.push(DateExt.UTC('30,May,2005'));
        expectedHol.push(DateExt.UTC('29,August,2005'));
        expectedHol.push(DateExt.UTC('26,December,2005'));
        expectedHol.push(DateExt.UTC('27,December,2005'));
        expectedHol.push(DateExt.UTC('2,January,2006'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('17,April,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('29,May,2006'));
        expectedHol.push(DateExt.UTC('28,August,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('26,December,2006'));
        expectedHol.push(DateExt.UTC('1,January,2007'));
        expectedHol.push(DateExt.UTC('6,April,2007'));
        expectedHol.push(DateExt.UTC('9,April,2007'));
        expectedHol.push(DateExt.UTC('7,May,2007'));
        expectedHol.push(DateExt.UTC('28,May,2007'));
        expectedHol.push(DateExt.UTC('27,August,2007'));
        expectedHol.push(DateExt.UTC('25,December,2007'));
        expectedHol.push(DateExt.UTC('26,December,2007'));
        const c = new UnitedKingdom(UnitedKingdom.Market.Metals);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2007'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Milan Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2002'));
        expectedHol.push(DateExt.UTC('29,March,2002'));
        expectedHol.push(DateExt.UTC('1,April,2002'));
        expectedHol.push(DateExt.UTC('1,May,2002'));
        expectedHol.push(DateExt.UTC('15,August,2002'));
        expectedHol.push(DateExt.UTC('24,December,2002'));
        expectedHol.push(DateExt.UTC('25,December,2002'));
        expectedHol.push(DateExt.UTC('26,December,2002'));
        expectedHol.push(DateExt.UTC('31,December,2002'));
        expectedHol.push(DateExt.UTC('1,January,2003'));
        expectedHol.push(DateExt.UTC('18,April,2003'));
        expectedHol.push(DateExt.UTC('21,April,2003'));
        expectedHol.push(DateExt.UTC('1,May,2003'));
        expectedHol.push(DateExt.UTC('15,August,2003'));
        expectedHol.push(DateExt.UTC('24,December,2003'));
        expectedHol.push(DateExt.UTC('25,December,2003'));
        expectedHol.push(DateExt.UTC('26,December,2003'));
        expectedHol.push(DateExt.UTC('31,December,2003'));
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('9,April,2004'));
        expectedHol.push(DateExt.UTC('12,April,2004'));
        expectedHol.push(DateExt.UTC('24,December,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        const c = new Italy(Italy.Market.Exchange);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2002'), DateExt.UTC('31,December,2004'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Russia holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2012'));
        expectedHol.push(DateExt.UTC('2,January,2012'));
        expectedHol.push(DateExt.UTC('7,January,2012'));
        expectedHol.push(DateExt.UTC('8,January,2012'));
        expectedHol.push(DateExt.UTC('14,January,2012'));
        expectedHol.push(DateExt.UTC('15,January,2012'));
        expectedHol.push(DateExt.UTC('21,January,2012'));
        expectedHol.push(DateExt.UTC('22,January,2012'));
        expectedHol.push(DateExt.UTC('28,January,2012'));
        expectedHol.push(DateExt.UTC('29,January,2012'));
        expectedHol.push(DateExt.UTC('4,February,2012'));
        expectedHol.push(DateExt.UTC('5,February,2012'));
        expectedHol.push(DateExt.UTC('11,February,2012'));
        expectedHol.push(DateExt.UTC('12,February,2012'));
        expectedHol.push(DateExt.UTC('18,February,2012'));
        expectedHol.push(DateExt.UTC('19,February,2012'));
        expectedHol.push(DateExt.UTC('23,February,2012'));
        expectedHol.push(DateExt.UTC('25,February,2012'));
        expectedHol.push(DateExt.UTC('26,February,2012'));
        expectedHol.push(DateExt.UTC('3,March,2012'));
        expectedHol.push(DateExt.UTC('4,March,2012'));
        expectedHol.push(DateExt.UTC('8,March,2012'));
        expectedHol.push(DateExt.UTC('9,March,2012'));
        expectedHol.push(DateExt.UTC('10,March,2012'));
        expectedHol.push(DateExt.UTC('17,March,2012'));
        expectedHol.push(DateExt.UTC('18,March,2012'));
        expectedHol.push(DateExt.UTC('24,March,2012'));
        expectedHol.push(DateExt.UTC('25,March,2012'));
        expectedHol.push(DateExt.UTC('31,March,2012'));
        expectedHol.push(DateExt.UTC('1,April,2012'));
        expectedHol.push(DateExt.UTC('7,April,2012'));
        expectedHol.push(DateExt.UTC('8,April,2012'));
        expectedHol.push(DateExt.UTC('14,April,2012'));
        expectedHol.push(DateExt.UTC('15,April,2012'));
        expectedHol.push(DateExt.UTC('21,April,2012'));
        expectedHol.push(DateExt.UTC('22,April,2012'));
        expectedHol.push(DateExt.UTC('29,April,2012'));
        expectedHol.push(DateExt.UTC('30,April,2012'));
        expectedHol.push(DateExt.UTC('1,May,2012'));
        expectedHol.push(DateExt.UTC('6,May,2012'));
        expectedHol.push(DateExt.UTC('9,May,2012'));
        expectedHol.push(DateExt.UTC('13,May,2012'));
        expectedHol.push(DateExt.UTC('19,May,2012'));
        expectedHol.push(DateExt.UTC('20,May,2012'));
        expectedHol.push(DateExt.UTC('26,May,2012'));
        expectedHol.push(DateExt.UTC('27,May,2012'));
        expectedHol.push(DateExt.UTC('2,June,2012'));
        expectedHol.push(DateExt.UTC('3,June,2012'));
        expectedHol.push(DateExt.UTC('10,June,2012'));
        expectedHol.push(DateExt.UTC('11,June,2012'));
        expectedHol.push(DateExt.UTC('12,June,2012'));
        expectedHol.push(DateExt.UTC('16,June,2012'));
        expectedHol.push(DateExt.UTC('17,June,2012'));
        expectedHol.push(DateExt.UTC('23,June,2012'));
        expectedHol.push(DateExt.UTC('24,June,2012'));
        expectedHol.push(DateExt.UTC('30,June,2012'));
        expectedHol.push(DateExt.UTC('1,July,2012'));
        expectedHol.push(DateExt.UTC('7,July,2012'));
        expectedHol.push(DateExt.UTC('8,July,2012'));
        expectedHol.push(DateExt.UTC('14,July,2012'));
        expectedHol.push(DateExt.UTC('15,July,2012'));
        expectedHol.push(DateExt.UTC('21,July,2012'));
        expectedHol.push(DateExt.UTC('22,July,2012'));
        expectedHol.push(DateExt.UTC('28,July,2012'));
        expectedHol.push(DateExt.UTC('29,July,2012'));
        expectedHol.push(DateExt.UTC('4,August,2012'));
        expectedHol.push(DateExt.UTC('5,August,2012'));
        expectedHol.push(DateExt.UTC('11,August,2012'));
        expectedHol.push(DateExt.UTC('12,August,2012'));
        expectedHol.push(DateExt.UTC('18,August,2012'));
        expectedHol.push(DateExt.UTC('19,August,2012'));
        expectedHol.push(DateExt.UTC('25,August,2012'));
        expectedHol.push(DateExt.UTC('26,August,2012'));
        expectedHol.push(DateExt.UTC('1,September,2012'));
        expectedHol.push(DateExt.UTC('2,September,2012'));
        expectedHol.push(DateExt.UTC('8,September,2012'));
        expectedHol.push(DateExt.UTC('9,September,2012'));
        expectedHol.push(DateExt.UTC('15,September,2012'));
        expectedHol.push(DateExt.UTC('16,September,2012'));
        expectedHol.push(DateExt.UTC('22,September,2012'));
        expectedHol.push(DateExt.UTC('23,September,2012'));
        expectedHol.push(DateExt.UTC('29,September,2012'));
        expectedHol.push(DateExt.UTC('30,September,2012'));
        expectedHol.push(DateExt.UTC('6,October,2012'));
        expectedHol.push(DateExt.UTC('7,October,2012'));
        expectedHol.push(DateExt.UTC('13,October,2012'));
        expectedHol.push(DateExt.UTC('14,October,2012'));
        expectedHol.push(DateExt.UTC('20,October,2012'));
        expectedHol.push(DateExt.UTC('21,October,2012'));
        expectedHol.push(DateExt.UTC('27,October,2012'));
        expectedHol.push(DateExt.UTC('28,October,2012'));
        expectedHol.push(DateExt.UTC('3,November,2012'));
        expectedHol.push(DateExt.UTC('4,November,2012'));
        expectedHol.push(DateExt.UTC('5,November,2012'));
        expectedHol.push(DateExt.UTC('10,November,2012'));
        expectedHol.push(DateExt.UTC('11,November,2012'));
        expectedHol.push(DateExt.UTC('17,November,2012'));
        expectedHol.push(DateExt.UTC('18,November,2012'));
        expectedHol.push(DateExt.UTC('24,November,2012'));
        expectedHol.push(DateExt.UTC('25,November,2012'));
        expectedHol.push(DateExt.UTC('1,December,2012'));
        expectedHol.push(DateExt.UTC('2,December,2012'));
        expectedHol.push(DateExt.UTC('8,December,2012'));
        expectedHol.push(DateExt.UTC('9,December,2012'));
        expectedHol.push(DateExt.UTC('15,December,2012'));
        expectedHol.push(DateExt.UTC('16,December,2012'));
        expectedHol.push(DateExt.UTC('22,December,2012'));
        expectedHol.push(DateExt.UTC('23,December,2012'));
        expectedHol.push(DateExt.UTC('29,December,2012'));
        expectedHol.push(DateExt.UTC('30,December,2012'));
        expectedHol.push(DateExt.UTC('31,December,2012'));
        expectedHol.push(DateExt.UTC('1,January,2013'));
        expectedHol.push(DateExt.UTC('2,January,2013'));
        expectedHol.push(DateExt.UTC('3,January,2013'));
        expectedHol.push(DateExt.UTC('4,January,2013'));
        expectedHol.push(DateExt.UTC('5,January,2013'));
        expectedHol.push(DateExt.UTC('6,January,2013'));
        expectedHol.push(DateExt.UTC('7,January,2013'));
        expectedHol.push(DateExt.UTC('12,January,2013'));
        expectedHol.push(DateExt.UTC('13,January,2013'));
        expectedHol.push(DateExt.UTC('19,January,2013'));
        expectedHol.push(DateExt.UTC('20,January,2013'));
        expectedHol.push(DateExt.UTC('26,January,2013'));
        expectedHol.push(DateExt.UTC('27,January,2013'));
        expectedHol.push(DateExt.UTC('2,February,2013'));
        expectedHol.push(DateExt.UTC('3,February,2013'));
        expectedHol.push(DateExt.UTC('9,February,2013'));
        expectedHol.push(DateExt.UTC('10,February,2013'));
        expectedHol.push(DateExt.UTC('16,February,2013'));
        expectedHol.push(DateExt.UTC('17,February,2013'));
        expectedHol.push(DateExt.UTC('23,February,2013'));
        expectedHol.push(DateExt.UTC('24,February,2013'));
        expectedHol.push(DateExt.UTC('2,March,2013'));
        expectedHol.push(DateExt.UTC('3,March,2013'));
        expectedHol.push(DateExt.UTC('8,March,2013'));
        expectedHol.push(DateExt.UTC('9,March,2013'));
        expectedHol.push(DateExt.UTC('10,March,2013'));
        expectedHol.push(DateExt.UTC('16,March,2013'));
        expectedHol.push(DateExt.UTC('17,March,2013'));
        expectedHol.push(DateExt.UTC('23,March,2013'));
        expectedHol.push(DateExt.UTC('24,March,2013'));
        expectedHol.push(DateExt.UTC('30,March,2013'));
        expectedHol.push(DateExt.UTC('31,March,2013'));
        expectedHol.push(DateExt.UTC('6,April,2013'));
        expectedHol.push(DateExt.UTC('7,April,2013'));
        expectedHol.push(DateExt.UTC('13,April,2013'));
        expectedHol.push(DateExt.UTC('14,April,2013'));
        expectedHol.push(DateExt.UTC('20,April,2013'));
        expectedHol.push(DateExt.UTC('21,April,2013'));
        expectedHol.push(DateExt.UTC('27,April,2013'));
        expectedHol.push(DateExt.UTC('28,April,2013'));
        expectedHol.push(DateExt.UTC('1,May,2013'));
        expectedHol.push(DateExt.UTC('4,May,2013'));
        expectedHol.push(DateExt.UTC('5,May,2013'));
        expectedHol.push(DateExt.UTC('9,May,2013'));
        expectedHol.push(DateExt.UTC('11,May,2013'));
        expectedHol.push(DateExt.UTC('12,May,2013'));
        expectedHol.push(DateExt.UTC('18,May,2013'));
        expectedHol.push(DateExt.UTC('19,May,2013'));
        expectedHol.push(DateExt.UTC('25,May,2013'));
        expectedHol.push(DateExt.UTC('26,May,2013'));
        expectedHol.push(DateExt.UTC('1,June,2013'));
        expectedHol.push(DateExt.UTC('2,June,2013'));
        expectedHol.push(DateExt.UTC('8,June,2013'));
        expectedHol.push(DateExt.UTC('9,June,2013'));
        expectedHol.push(DateExt.UTC('12,June,2013'));
        expectedHol.push(DateExt.UTC('15,June,2013'));
        expectedHol.push(DateExt.UTC('16,June,2013'));
        expectedHol.push(DateExt.UTC('22,June,2013'));
        expectedHol.push(DateExt.UTC('23,June,2013'));
        expectedHol.push(DateExt.UTC('29,June,2013'));
        expectedHol.push(DateExt.UTC('30,June,2013'));
        expectedHol.push(DateExt.UTC('6,July,2013'));
        expectedHol.push(DateExt.UTC('7,July,2013'));
        expectedHol.push(DateExt.UTC('13,July,2013'));
        expectedHol.push(DateExt.UTC('14,July,2013'));
        expectedHol.push(DateExt.UTC('20,July,2013'));
        expectedHol.push(DateExt.UTC('21,July,2013'));
        expectedHol.push(DateExt.UTC('27,July,2013'));
        expectedHol.push(DateExt.UTC('28,July,2013'));
        expectedHol.push(DateExt.UTC('3,August,2013'));
        expectedHol.push(DateExt.UTC('4,August,2013'));
        expectedHol.push(DateExt.UTC('10,August,2013'));
        expectedHol.push(DateExt.UTC('11,August,2013'));
        expectedHol.push(DateExt.UTC('17,August,2013'));
        expectedHol.push(DateExt.UTC('18,August,2013'));
        expectedHol.push(DateExt.UTC('24,August,2013'));
        expectedHol.push(DateExt.UTC('25,August,2013'));
        expectedHol.push(DateExt.UTC('31,August,2013'));
        expectedHol.push(DateExt.UTC('1,September,2013'));
        expectedHol.push(DateExt.UTC('7,September,2013'));
        expectedHol.push(DateExt.UTC('8,September,2013'));
        expectedHol.push(DateExt.UTC('14,September,2013'));
        expectedHol.push(DateExt.UTC('15,September,2013'));
        expectedHol.push(DateExt.UTC('21,September,2013'));
        expectedHol.push(DateExt.UTC('22,September,2013'));
        expectedHol.push(DateExt.UTC('28,September,2013'));
        expectedHol.push(DateExt.UTC('29,September,2013'));
        expectedHol.push(DateExt.UTC('5,October,2013'));
        expectedHol.push(DateExt.UTC('6,October,2013'));
        expectedHol.push(DateExt.UTC('12,October,2013'));
        expectedHol.push(DateExt.UTC('13,October,2013'));
        expectedHol.push(DateExt.UTC('19,October,2013'));
        expectedHol.push(DateExt.UTC('20,October,2013'));
        expectedHol.push(DateExt.UTC('26,October,2013'));
        expectedHol.push(DateExt.UTC('27,October,2013'));
        expectedHol.push(DateExt.UTC('2,November,2013'));
        expectedHol.push(DateExt.UTC('3,November,2013'));
        expectedHol.push(DateExt.UTC('4,November,2013'));
        expectedHol.push(DateExt.UTC('9,November,2013'));
        expectedHol.push(DateExt.UTC('10,November,2013'));
        expectedHol.push(DateExt.UTC('16,November,2013'));
        expectedHol.push(DateExt.UTC('17,November,2013'));
        expectedHol.push(DateExt.UTC('23,November,2013'));
        expectedHol.push(DateExt.UTC('24,November,2013'));
        expectedHol.push(DateExt.UTC('30,November,2013'));
        expectedHol.push(DateExt.UTC('1,December,2013'));
        expectedHol.push(DateExt.UTC('7,December,2013'));
        expectedHol.push(DateExt.UTC('8,December,2013'));
        expectedHol.push(DateExt.UTC('14,December,2013'));
        expectedHol.push(DateExt.UTC('15,December,2013'));
        expectedHol.push(DateExt.UTC('21,December,2013'));
        expectedHol.push(DateExt.UTC('22,December,2013'));
        expectedHol.push(DateExt.UTC('28,December,2013'));
        expectedHol.push(DateExt.UTC('29,December,2013'));
        expectedHol.push(DateExt.UTC('31,December,2013'));
        expectedHol.push(DateExt.UTC('1,January,2014'));
        expectedHol.push(DateExt.UTC('2,January,2014'));
        expectedHol.push(DateExt.UTC('3,January,2014'));
        expectedHol.push(DateExt.UTC('4,January,2014'));
        expectedHol.push(DateExt.UTC('5,January,2014'));
        expectedHol.push(DateExt.UTC('7,January,2014'));
        expectedHol.push(DateExt.UTC('11,January,2014'));
        expectedHol.push(DateExt.UTC('12,January,2014'));
        expectedHol.push(DateExt.UTC('18,January,2014'));
        expectedHol.push(DateExt.UTC('19,January,2014'));
        expectedHol.push(DateExt.UTC('25,January,2014'));
        expectedHol.push(DateExt.UTC('26,January,2014'));
        expectedHol.push(DateExt.UTC('1,February,2014'));
        expectedHol.push(DateExt.UTC('2,February,2014'));
        expectedHol.push(DateExt.UTC('8,February,2014'));
        expectedHol.push(DateExt.UTC('9,February,2014'));
        expectedHol.push(DateExt.UTC('15,February,2014'));
        expectedHol.push(DateExt.UTC('16,February,2014'));
        expectedHol.push(DateExt.UTC('22,February,2014'));
        expectedHol.push(DateExt.UTC('23,February,2014'));
        expectedHol.push(DateExt.UTC('1,March,2014'));
        expectedHol.push(DateExt.UTC('2,March,2014'));
        expectedHol.push(DateExt.UTC('8,March,2014'));
        expectedHol.push(DateExt.UTC('9,March,2014'));
        expectedHol.push(DateExt.UTC('10,March,2014'));
        expectedHol.push(DateExt.UTC('15,March,2014'));
        expectedHol.push(DateExt.UTC('16,March,2014'));
        expectedHol.push(DateExt.UTC('22,March,2014'));
        expectedHol.push(DateExt.UTC('23,March,2014'));
        expectedHol.push(DateExt.UTC('29,March,2014'));
        expectedHol.push(DateExt.UTC('30,March,2014'));
        expectedHol.push(DateExt.UTC('5,April,2014'));
        expectedHol.push(DateExt.UTC('6,April,2014'));
        expectedHol.push(DateExt.UTC('12,April,2014'));
        expectedHol.push(DateExt.UTC('13,April,2014'));
        expectedHol.push(DateExt.UTC('19,April,2014'));
        expectedHol.push(DateExt.UTC('20,April,2014'));
        expectedHol.push(DateExt.UTC('26,April,2014'));
        expectedHol.push(DateExt.UTC('27,April,2014'));
        expectedHol.push(DateExt.UTC('1,May,2014'));
        expectedHol.push(DateExt.UTC('3,May,2014'));
        expectedHol.push(DateExt.UTC('4,May,2014'));
        expectedHol.push(DateExt.UTC('9,May,2014'));
        expectedHol.push(DateExt.UTC('10,May,2014'));
        expectedHol.push(DateExt.UTC('11,May,2014'));
        expectedHol.push(DateExt.UTC('17,May,2014'));
        expectedHol.push(DateExt.UTC('18,May,2014'));
        expectedHol.push(DateExt.UTC('24,May,2014'));
        expectedHol.push(DateExt.UTC('25,May,2014'));
        expectedHol.push(DateExt.UTC('31,May,2014'));
        expectedHol.push(DateExt.UTC('1,June,2014'));
        expectedHol.push(DateExt.UTC('7,June,2014'));
        expectedHol.push(DateExt.UTC('8,June,2014'));
        expectedHol.push(DateExt.UTC('12,June,2014'));
        expectedHol.push(DateExt.UTC('14,June,2014'));
        expectedHol.push(DateExt.UTC('15,June,2014'));
        expectedHol.push(DateExt.UTC('21,June,2014'));
        expectedHol.push(DateExt.UTC('22,June,2014'));
        expectedHol.push(DateExt.UTC('28,June,2014'));
        expectedHol.push(DateExt.UTC('29,June,2014'));
        expectedHol.push(DateExt.UTC('5,July,2014'));
        expectedHol.push(DateExt.UTC('6,July,2014'));
        expectedHol.push(DateExt.UTC('12,July,2014'));
        expectedHol.push(DateExt.UTC('13,July,2014'));
        expectedHol.push(DateExt.UTC('19,July,2014'));
        expectedHol.push(DateExt.UTC('20,July,2014'));
        expectedHol.push(DateExt.UTC('26,July,2014'));
        expectedHol.push(DateExt.UTC('27,July,2014'));
        expectedHol.push(DateExt.UTC('2,August,2014'));
        expectedHol.push(DateExt.UTC('3,August,2014'));
        expectedHol.push(DateExt.UTC('9,August,2014'));
        expectedHol.push(DateExt.UTC('10,August,2014'));
        expectedHol.push(DateExt.UTC('16,August,2014'));
        expectedHol.push(DateExt.UTC('17,August,2014'));
        expectedHol.push(DateExt.UTC('23,August,2014'));
        expectedHol.push(DateExt.UTC('24,August,2014'));
        expectedHol.push(DateExt.UTC('30,August,2014'));
        expectedHol.push(DateExt.UTC('31,August,2014'));
        expectedHol.push(DateExt.UTC('6,September,2014'));
        expectedHol.push(DateExt.UTC('7,September,2014'));
        expectedHol.push(DateExt.UTC('13,September,2014'));
        expectedHol.push(DateExt.UTC('14,September,2014'));
        expectedHol.push(DateExt.UTC('20,September,2014'));
        expectedHol.push(DateExt.UTC('21,September,2014'));
        expectedHol.push(DateExt.UTC('27,September,2014'));
        expectedHol.push(DateExt.UTC('28,September,2014'));
        expectedHol.push(DateExt.UTC('4,October,2014'));
        expectedHol.push(DateExt.UTC('5,October,2014'));
        expectedHol.push(DateExt.UTC('11,October,2014'));
        expectedHol.push(DateExt.UTC('12,October,2014'));
        expectedHol.push(DateExt.UTC('18,October,2014'));
        expectedHol.push(DateExt.UTC('19,October,2014'));
        expectedHol.push(DateExt.UTC('25,October,2014'));
        expectedHol.push(DateExt.UTC('26,October,2014'));
        expectedHol.push(DateExt.UTC('1,November,2014'));
        expectedHol.push(DateExt.UTC('2,November,2014'));
        expectedHol.push(DateExt.UTC('4,November,2014'));
        expectedHol.push(DateExt.UTC('8,November,2014'));
        expectedHol.push(DateExt.UTC('9,November,2014'));
        expectedHol.push(DateExt.UTC('15,November,2014'));
        expectedHol.push(DateExt.UTC('16,November,2014'));
        expectedHol.push(DateExt.UTC('22,November,2014'));
        expectedHol.push(DateExt.UTC('23,November,2014'));
        expectedHol.push(DateExt.UTC('29,November,2014'));
        expectedHol.push(DateExt.UTC('30,November,2014'));
        expectedHol.push(DateExt.UTC('6,December,2014'));
        expectedHol.push(DateExt.UTC('7,December,2014'));
        expectedHol.push(DateExt.UTC('13,December,2014'));
        expectedHol.push(DateExt.UTC('14,December,2014'));
        expectedHol.push(DateExt.UTC('20,December,2014'));
        expectedHol.push(DateExt.UTC('21,December,2014'));
        expectedHol.push(DateExt.UTC('27,December,2014'));
        expectedHol.push(DateExt.UTC('28,December,2014'));
        expectedHol.push(DateExt.UTC('31,December,2014'));
        expectedHol.push(DateExt.UTC('1,January,2015'));
        expectedHol.push(DateExt.UTC('2,January,2015'));
        expectedHol.push(DateExt.UTC('3,January,2015'));
        expectedHol.push(DateExt.UTC('4,January,2015'));
        expectedHol.push(DateExt.UTC('7,January,2015'));
        expectedHol.push(DateExt.UTC('10,January,2015'));
        expectedHol.push(DateExt.UTC('11,January,2015'));
        expectedHol.push(DateExt.UTC('17,January,2015'));
        expectedHol.push(DateExt.UTC('18,January,2015'));
        expectedHol.push(DateExt.UTC('24,January,2015'));
        expectedHol.push(DateExt.UTC('25,January,2015'));
        expectedHol.push(DateExt.UTC('31,January,2015'));
        expectedHol.push(DateExt.UTC('1,February,2015'));
        expectedHol.push(DateExt.UTC('7,February,2015'));
        expectedHol.push(DateExt.UTC('8,February,2015'));
        expectedHol.push(DateExt.UTC('14,February,2015'));
        expectedHol.push(DateExt.UTC('15,February,2015'));
        expectedHol.push(DateExt.UTC('21,February,2015'));
        expectedHol.push(DateExt.UTC('22,February,2015'));
        expectedHol.push(DateExt.UTC('23,February,2015'));
        expectedHol.push(DateExt.UTC('28,February,2015'));
        expectedHol.push(DateExt.UTC('1,March,2015'));
        expectedHol.push(DateExt.UTC('7,March,2015'));
        expectedHol.push(DateExt.UTC('8,March,2015'));
        expectedHol.push(DateExt.UTC('9,March,2015'));
        expectedHol.push(DateExt.UTC('14,March,2015'));
        expectedHol.push(DateExt.UTC('15,March,2015'));
        expectedHol.push(DateExt.UTC('21,March,2015'));
        expectedHol.push(DateExt.UTC('22,March,2015'));
        expectedHol.push(DateExt.UTC('28,March,2015'));
        expectedHol.push(DateExt.UTC('29,March,2015'));
        expectedHol.push(DateExt.UTC('4,April,2015'));
        expectedHol.push(DateExt.UTC('5,April,2015'));
        expectedHol.push(DateExt.UTC('11,April,2015'));
        expectedHol.push(DateExt.UTC('12,April,2015'));
        expectedHol.push(DateExt.UTC('18,April,2015'));
        expectedHol.push(DateExt.UTC('19,April,2015'));
        expectedHol.push(DateExt.UTC('25,April,2015'));
        expectedHol.push(DateExt.UTC('26,April,2015'));
        expectedHol.push(DateExt.UTC('1,May,2015'));
        expectedHol.push(DateExt.UTC('2,May,2015'));
        expectedHol.push(DateExt.UTC('3,May,2015'));
        expectedHol.push(DateExt.UTC('9,May,2015'));
        expectedHol.push(DateExt.UTC('10,May,2015'));
        expectedHol.push(DateExt.UTC('11,May,2015'));
        expectedHol.push(DateExt.UTC('16,May,2015'));
        expectedHol.push(DateExt.UTC('17,May,2015'));
        expectedHol.push(DateExt.UTC('23,May,2015'));
        expectedHol.push(DateExt.UTC('24,May,2015'));
        expectedHol.push(DateExt.UTC('30,May,2015'));
        expectedHol.push(DateExt.UTC('31,May,2015'));
        expectedHol.push(DateExt.UTC('6,June,2015'));
        expectedHol.push(DateExt.UTC('7,June,2015'));
        expectedHol.push(DateExt.UTC('12,June,2015'));
        expectedHol.push(DateExt.UTC('13,June,2015'));
        expectedHol.push(DateExt.UTC('14,June,2015'));
        expectedHol.push(DateExt.UTC('20,June,2015'));
        expectedHol.push(DateExt.UTC('21,June,2015'));
        expectedHol.push(DateExt.UTC('27,June,2015'));
        expectedHol.push(DateExt.UTC('28,June,2015'));
        expectedHol.push(DateExt.UTC('4,July,2015'));
        expectedHol.push(DateExt.UTC('5,July,2015'));
        expectedHol.push(DateExt.UTC('11,July,2015'));
        expectedHol.push(DateExt.UTC('12,July,2015'));
        expectedHol.push(DateExt.UTC('18,July,2015'));
        expectedHol.push(DateExt.UTC('19,July,2015'));
        expectedHol.push(DateExt.UTC('25,July,2015'));
        expectedHol.push(DateExt.UTC('26,July,2015'));
        expectedHol.push(DateExt.UTC('1,August,2015'));
        expectedHol.push(DateExt.UTC('2,August,2015'));
        expectedHol.push(DateExt.UTC('8,August,2015'));
        expectedHol.push(DateExt.UTC('9,August,2015'));
        expectedHol.push(DateExt.UTC('15,August,2015'));
        expectedHol.push(DateExt.UTC('16,August,2015'));
        expectedHol.push(DateExt.UTC('22,August,2015'));
        expectedHol.push(DateExt.UTC('23,August,2015'));
        expectedHol.push(DateExt.UTC('29,August,2015'));
        expectedHol.push(DateExt.UTC('30,August,2015'));
        expectedHol.push(DateExt.UTC('5,September,2015'));
        expectedHol.push(DateExt.UTC('6,September,2015'));
        expectedHol.push(DateExt.UTC('12,September,2015'));
        expectedHol.push(DateExt.UTC('13,September,2015'));
        expectedHol.push(DateExt.UTC('19,September,2015'));
        expectedHol.push(DateExt.UTC('20,September,2015'));
        expectedHol.push(DateExt.UTC('26,September,2015'));
        expectedHol.push(DateExt.UTC('27,September,2015'));
        expectedHol.push(DateExt.UTC('3,October,2015'));
        expectedHol.push(DateExt.UTC('4,October,2015'));
        expectedHol.push(DateExt.UTC('10,October,2015'));
        expectedHol.push(DateExt.UTC('11,October,2015'));
        expectedHol.push(DateExt.UTC('17,October,2015'));
        expectedHol.push(DateExt.UTC('18,October,2015'));
        expectedHol.push(DateExt.UTC('24,October,2015'));
        expectedHol.push(DateExt.UTC('25,October,2015'));
        expectedHol.push(DateExt.UTC('31,October,2015'));
        expectedHol.push(DateExt.UTC('1,November,2015'));
        expectedHol.push(DateExt.UTC('4,November,2015'));
        expectedHol.push(DateExt.UTC('7,November,2015'));
        expectedHol.push(DateExt.UTC('8,November,2015'));
        expectedHol.push(DateExt.UTC('14,November,2015'));
        expectedHol.push(DateExt.UTC('15,November,2015'));
        expectedHol.push(DateExt.UTC('21,November,2015'));
        expectedHol.push(DateExt.UTC('22,November,2015'));
        expectedHol.push(DateExt.UTC('28,November,2015'));
        expectedHol.push(DateExt.UTC('29,November,2015'));
        expectedHol.push(DateExt.UTC('5,December,2015'));
        expectedHol.push(DateExt.UTC('6,December,2015'));
        expectedHol.push(DateExt.UTC('12,December,2015'));
        expectedHol.push(DateExt.UTC('13,December,2015'));
        expectedHol.push(DateExt.UTC('19,December,2015'));
        expectedHol.push(DateExt.UTC('20,December,2015'));
        expectedHol.push(DateExt.UTC('26,December,2015'));
        expectedHol.push(DateExt.UTC('27,December,2015'));
        expectedHol.push(DateExt.UTC('31,December,2015'));
        expectedHol.push(DateExt.UTC('1,January,2016'));
        expectedHol.push(DateExt.UTC('2,January,2016'));
        expectedHol.push(DateExt.UTC('3,January,2016'));
        expectedHol.push(DateExt.UTC('7,January,2016'));
        expectedHol.push(DateExt.UTC('8,January,2016'));
        expectedHol.push(DateExt.UTC('9,January,2016'));
        expectedHol.push(DateExt.UTC('10,January,2016'));
        expectedHol.push(DateExt.UTC('16,January,2016'));
        expectedHol.push(DateExt.UTC('17,January,2016'));
        expectedHol.push(DateExt.UTC('23,January,2016'));
        expectedHol.push(DateExt.UTC('24,January,2016'));
        expectedHol.push(DateExt.UTC('30,January,2016'));
        expectedHol.push(DateExt.UTC('31,January,2016'));
        expectedHol.push(DateExt.UTC('6,February,2016'));
        expectedHol.push(DateExt.UTC('7,February,2016'));
        expectedHol.push(DateExt.UTC('13,February,2016'));
        expectedHol.push(DateExt.UTC('14,February,2016'));
        expectedHol.push(DateExt.UTC('21,February,2016'));
        expectedHol.push(DateExt.UTC('23,February,2016'));
        expectedHol.push(DateExt.UTC('27,February,2016'));
        expectedHol.push(DateExt.UTC('28,February,2016'));
        expectedHol.push(DateExt.UTC('5,March,2016'));
        expectedHol.push(DateExt.UTC('6,March,2016'));
        expectedHol.push(DateExt.UTC('8,March,2016'));
        expectedHol.push(DateExt.UTC('12,March,2016'));
        expectedHol.push(DateExt.UTC('13,March,2016'));
        expectedHol.push(DateExt.UTC('19,March,2016'));
        expectedHol.push(DateExt.UTC('20,March,2016'));
        expectedHol.push(DateExt.UTC('26,March,2016'));
        expectedHol.push(DateExt.UTC('27,March,2016'));
        expectedHol.push(DateExt.UTC('2,April,2016'));
        expectedHol.push(DateExt.UTC('3,April,2016'));
        expectedHol.push(DateExt.UTC('9,April,2016'));
        expectedHol.push(DateExt.UTC('10,April,2016'));
        expectedHol.push(DateExt.UTC('16,April,2016'));
        expectedHol.push(DateExt.UTC('17,April,2016'));
        expectedHol.push(DateExt.UTC('23,April,2016'));
        expectedHol.push(DateExt.UTC('24,April,2016'));
        expectedHol.push(DateExt.UTC('30,April,2016'));
        expectedHol.push(DateExt.UTC('1,May,2016'));
        expectedHol.push(DateExt.UTC('2,May,2016'));
        expectedHol.push(DateExt.UTC('3,May,2016'));
        expectedHol.push(DateExt.UTC('7,May,2016'));
        expectedHol.push(DateExt.UTC('8,May,2016'));
        expectedHol.push(DateExt.UTC('9,May,2016'));
        expectedHol.push(DateExt.UTC('14,May,2016'));
        expectedHol.push(DateExt.UTC('15,May,2016'));
        expectedHol.push(DateExt.UTC('21,May,2016'));
        expectedHol.push(DateExt.UTC('22,May,2016'));
        expectedHol.push(DateExt.UTC('28,May,2016'));
        expectedHol.push(DateExt.UTC('29,May,2016'));
        expectedHol.push(DateExt.UTC('4,June,2016'));
        expectedHol.push(DateExt.UTC('5,June,2016'));
        expectedHol.push(DateExt.UTC('11,June,2016'));
        expectedHol.push(DateExt.UTC('12,June,2016'));
        expectedHol.push(DateExt.UTC('13,June,2016'));
        expectedHol.push(DateExt.UTC('18,June,2016'));
        expectedHol.push(DateExt.UTC('19,June,2016'));
        expectedHol.push(DateExt.UTC('25,June,2016'));
        expectedHol.push(DateExt.UTC('26,June,2016'));
        expectedHol.push(DateExt.UTC('2,July,2016'));
        expectedHol.push(DateExt.UTC('3,July,2016'));
        expectedHol.push(DateExt.UTC('9,July,2016'));
        expectedHol.push(DateExt.UTC('10,July,2016'));
        expectedHol.push(DateExt.UTC('16,July,2016'));
        expectedHol.push(DateExt.UTC('17,July,2016'));
        expectedHol.push(DateExt.UTC('23,July,2016'));
        expectedHol.push(DateExt.UTC('24,July,2016'));
        expectedHol.push(DateExt.UTC('30,July,2016'));
        expectedHol.push(DateExt.UTC('31,July,2016'));
        expectedHol.push(DateExt.UTC('6,August,2016'));
        expectedHol.push(DateExt.UTC('7,August,2016'));
        expectedHol.push(DateExt.UTC('13,August,2016'));
        expectedHol.push(DateExt.UTC('14,August,2016'));
        expectedHol.push(DateExt.UTC('20,August,2016'));
        expectedHol.push(DateExt.UTC('21,August,2016'));
        expectedHol.push(DateExt.UTC('27,August,2016'));
        expectedHol.push(DateExt.UTC('28,August,2016'));
        expectedHol.push(DateExt.UTC('3,September,2016'));
        expectedHol.push(DateExt.UTC('4,September,2016'));
        expectedHol.push(DateExt.UTC('10,September,2016'));
        expectedHol.push(DateExt.UTC('11,September,2016'));
        expectedHol.push(DateExt.UTC('17,September,2016'));
        expectedHol.push(DateExt.UTC('18,September,2016'));
        expectedHol.push(DateExt.UTC('24,September,2016'));
        expectedHol.push(DateExt.UTC('25,September,2016'));
        expectedHol.push(DateExt.UTC('1,October,2016'));
        expectedHol.push(DateExt.UTC('2,October,2016'));
        expectedHol.push(DateExt.UTC('8,October,2016'));
        expectedHol.push(DateExt.UTC('9,October,2016'));
        expectedHol.push(DateExt.UTC('15,October,2016'));
        expectedHol.push(DateExt.UTC('16,October,2016'));
        expectedHol.push(DateExt.UTC('22,October,2016'));
        expectedHol.push(DateExt.UTC('23,October,2016'));
        expectedHol.push(DateExt.UTC('29,October,2016'));
        expectedHol.push(DateExt.UTC('30,October,2016'));
        expectedHol.push(DateExt.UTC('4,November,2016'));
        expectedHol.push(DateExt.UTC('5,November,2016'));
        expectedHol.push(DateExt.UTC('6,November,2016'));
        expectedHol.push(DateExt.UTC('12,November,2016'));
        expectedHol.push(DateExt.UTC('13,November,2016'));
        expectedHol.push(DateExt.UTC('19,November,2016'));
        expectedHol.push(DateExt.UTC('20,November,2016'));
        expectedHol.push(DateExt.UTC('26,November,2016'));
        expectedHol.push(DateExt.UTC('27,November,2016'));
        expectedHol.push(DateExt.UTC('3,December,2016'));
        expectedHol.push(DateExt.UTC('4,December,2016'));
        expectedHol.push(DateExt.UTC('10,December,2016'));
        expectedHol.push(DateExt.UTC('11,December,2016'));
        expectedHol.push(DateExt.UTC('17,December,2016'));
        expectedHol.push(DateExt.UTC('18,December,2016'));
        expectedHol.push(DateExt.UTC('24,December,2016'));
        expectedHol.push(DateExt.UTC('25,December,2016'));
        expectedHol.push(DateExt.UTC('30,December,2016'));
        expectedHol.push(DateExt.UTC('31,December,2016'));
        const c = new Russia(Russia.Market.MOEX);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2012'), DateExt.UTC('31,December,2016'), true);
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Brazil holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('7,February,2005'));
        expectedHol.push(DateExt.UTC('8,February,2005'));
        expectedHol.push(DateExt.UTC('25,March,2005'));
        expectedHol.push(DateExt.UTC('21,April,2005'));
        expectedHol.push(DateExt.UTC('26,May,2005'));
        expectedHol.push(DateExt.UTC('7,September,2005'));
        expectedHol.push(DateExt.UTC('12,October,2005'));
        expectedHol.push(DateExt.UTC('2,November,2005'));
        expectedHol.push(DateExt.UTC('15,November,2005'));
        expectedHol.push(DateExt.UTC('27,February,2006'));
        expectedHol.push(DateExt.UTC('28,February,2006'));
        expectedHol.push(DateExt.UTC('14,April,2006'));
        expectedHol.push(DateExt.UTC('21,April,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('15,June,2006'));
        expectedHol.push(DateExt.UTC('7,September,2006'));
        expectedHol.push(DateExt.UTC('12,October,2006'));
        expectedHol.push(DateExt.UTC('2,November,2006'));
        expectedHol.push(DateExt.UTC('15,November,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        const c = new Brazil();
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2005'), DateExt.UTC('31,December,2006'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing South-Korean settlement holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('21,January,2004'));
        expectedHol.push(DateExt.UTC('22,January,2004'));
        expectedHol.push(DateExt.UTC('23,January,2004'));
        expectedHol.push(DateExt.UTC('1,March,2004'));
        expectedHol.push(DateExt.UTC('5,April,2004'));
        expectedHol.push(DateExt.UTC('15,April,2004'));
        expectedHol.push(DateExt.UTC('5,May,2004'));
        expectedHol.push(DateExt.UTC('26,May,2004'));
        expectedHol.push(DateExt.UTC('27,September,2004'));
        expectedHol.push(DateExt.UTC('28,September,2004'));
        expectedHol.push(DateExt.UTC('29,September,2004'));
        expectedHol.push(DateExt.UTC('8,February,2005'));
        expectedHol.push(DateExt.UTC('9,February,2005'));
        expectedHol.push(DateExt.UTC('10,February,2005'));
        expectedHol.push(DateExt.UTC('1,March,2005'));
        expectedHol.push(DateExt.UTC('5,April,2005'));
        expectedHol.push(DateExt.UTC('5,May,2005'));
        expectedHol.push(DateExt.UTC('6,June,2005'));
        expectedHol.push(DateExt.UTC('15,August,2005'));
        expectedHol.push(DateExt.UTC('19,September,2005'));
        expectedHol.push(DateExt.UTC('3,October,2005'));
        expectedHol.push(DateExt.UTC('30,January,2006'));
        expectedHol.push(DateExt.UTC('1,March,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('5,May,2006'));
        expectedHol.push(DateExt.UTC('31,May,2006'));
        expectedHol.push(DateExt.UTC('6,June,2006'));
        expectedHol.push(DateExt.UTC('17,July,2006'));
        expectedHol.push(DateExt.UTC('15,August,2006'));
        expectedHol.push(DateExt.UTC('3,October,2006'));
        expectedHol.push(DateExt.UTC('5,October,2006'));
        expectedHol.push(DateExt.UTC('6,October,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('1,January,2007'));
        expectedHol.push(DateExt.UTC('19,February,2007'));
        expectedHol.push(DateExt.UTC('1,March,2007'));
        expectedHol.push(DateExt.UTC('1,May,2007'));
        expectedHol.push(DateExt.UTC('24,May,2007'));
        expectedHol.push(DateExt.UTC('6,June,2007'));
        expectedHol.push(DateExt.UTC('17,July,2007'));
        expectedHol.push(DateExt.UTC('15,August,2007'));
        expectedHol.push(DateExt.UTC('24,September,2007'));
        expectedHol.push(DateExt.UTC('25,September,2007'));
        expectedHol.push(DateExt.UTC('26,September,2007'));
        expectedHol.push(DateExt.UTC('3,October,2007'));
        expectedHol.push(DateExt.UTC('19,December,2007'));
        expectedHol.push(DateExt.UTC('25,December,2007'));
        const c = new SouthKorea(SouthKorea.Market.Settlement);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2007'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing Korea Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,January,2004'));
        expectedHol.push(DateExt.UTC('21,January,2004'));
        expectedHol.push(DateExt.UTC('22,January,2004'));
        expectedHol.push(DateExt.UTC('23,January,2004'));
        expectedHol.push(DateExt.UTC('1,March,2004'));
        expectedHol.push(DateExt.UTC('5,April,2004'));
        expectedHol.push(DateExt.UTC('15,April,2004'));
        expectedHol.push(DateExt.UTC('5,May,2004'));
        expectedHol.push(DateExt.UTC('26,May,2004'));
        expectedHol.push(DateExt.UTC('27,September,2004'));
        expectedHol.push(DateExt.UTC('28,September,2004'));
        expectedHol.push(DateExt.UTC('29,September,2004'));
        expectedHol.push(DateExt.UTC('31,December,2004'));
        expectedHol.push(DateExt.UTC('8,February,2005'));
        expectedHol.push(DateExt.UTC('9,February,2005'));
        expectedHol.push(DateExt.UTC('10,February,2005'));
        expectedHol.push(DateExt.UTC('1,March,2005'));
        expectedHol.push(DateExt.UTC('5,April,2005'));
        expectedHol.push(DateExt.UTC('5,May,2005'));
        expectedHol.push(DateExt.UTC('6,June,2005'));
        expectedHol.push(DateExt.UTC('15,August,2005'));
        expectedHol.push(DateExt.UTC('19,September,2005'));
        expectedHol.push(DateExt.UTC('3,October,2005'));
        expectedHol.push(DateExt.UTC('30,December,2005'));
        expectedHol.push(DateExt.UTC('30,January,2006'));
        expectedHol.push(DateExt.UTC('1,March,2006'));
        expectedHol.push(DateExt.UTC('1,May,2006'));
        expectedHol.push(DateExt.UTC('5,May,2006'));
        expectedHol.push(DateExt.UTC('31,May,2006'));
        expectedHol.push(DateExt.UTC('6,June,2006'));
        expectedHol.push(DateExt.UTC('17,July,2006'));
        expectedHol.push(DateExt.UTC('15,August,2006'));
        expectedHol.push(DateExt.UTC('3,October,2006'));
        expectedHol.push(DateExt.UTC('5,October,2006'));
        expectedHol.push(DateExt.UTC('6,October,2006'));
        expectedHol.push(DateExt.UTC('25,December,2006'));
        expectedHol.push(DateExt.UTC('29,December,2006'));
        expectedHol.push(DateExt.UTC('1,January,2007'));
        expectedHol.push(DateExt.UTC('19,February,2007'));
        expectedHol.push(DateExt.UTC('1,March,2007'));
        expectedHol.push(DateExt.UTC('1,May,2007'));
        expectedHol.push(DateExt.UTC('24,May,2007'));
        expectedHol.push(DateExt.UTC('6,June,2007'));
        expectedHol.push(DateExt.UTC('17,July,2007'));
        expectedHol.push(DateExt.UTC('15,August,2007'));
        expectedHol.push(DateExt.UTC('24,September,2007'));
        expectedHol.push(DateExt.UTC('25,September,2007'));
        expectedHol.push(DateExt.UTC('26,September,2007'));
        expectedHol.push(DateExt.UTC('3,October,2007'));
        expectedHol.push(DateExt.UTC('19,December,2007'));
        expectedHol.push(DateExt.UTC('25,December,2007'));
        expectedHol.push(DateExt.UTC('31,December,2007'));
        const c = new SouthKorea(SouthKorea.Market.KRX);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2004'), DateExt.UTC('31,December,2007'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing China Shanghai Stock Exchange holiday list...', () => {
        const expectedHol = [];
        expectedHol.push(DateExt.UTC('1,Jan,2014'));
        expectedHol.push(DateExt.UTC('31,Jan,2014'));
        expectedHol.push(DateExt.UTC('3,Feb,2014'));
        expectedHol.push(DateExt.UTC('4,Feb,2014'));
        expectedHol.push(DateExt.UTC('5,Feb,2014'));
        expectedHol.push(DateExt.UTC('6,Feb,2014'));
        expectedHol.push(DateExt.UTC('7,Apr,2014'));
        expectedHol.push(DateExt.UTC('1,May,2014'));
        expectedHol.push(DateExt.UTC('2,May,2014'));
        expectedHol.push(DateExt.UTC('2,Jun,2014'));
        expectedHol.push(DateExt.UTC('8,Sep,2014'));
        expectedHol.push(DateExt.UTC('1,Oct,2014'));
        expectedHol.push(DateExt.UTC('2,Oct,2014'));
        expectedHol.push(DateExt.UTC('3,Oct,2014'));
        expectedHol.push(DateExt.UTC('6,Oct,2014'));
        expectedHol.push(DateExt.UTC('7,Oct,2014'));
        expectedHol.push(DateExt.UTC('1,Jan,2015'));
        expectedHol.push(DateExt.UTC('2,Jan,2015'));
        expectedHol.push(DateExt.UTC('18,Feb,2015'));
        expectedHol.push(DateExt.UTC('19,Feb,2015'));
        expectedHol.push(DateExt.UTC('20,Feb,2015'));
        expectedHol.push(DateExt.UTC('23,Feb,2015'));
        expectedHol.push(DateExt.UTC('24,Feb,2015'));
        expectedHol.push(DateExt.UTC('6,Apr,2015'));
        expectedHol.push(DateExt.UTC('1,May,2015'));
        expectedHol.push(DateExt.UTC('22,Jun,2015'));
        expectedHol.push(DateExt.UTC('3,Sep,2015'));
        expectedHol.push(DateExt.UTC('4,Sep,2015'));
        expectedHol.push(DateExt.UTC('1,Oct,2015'));
        expectedHol.push(DateExt.UTC('2,Oct,2015'));
        expectedHol.push(DateExt.UTC('5,Oct,2015'));
        expectedHol.push(DateExt.UTC('6,Oct,2015'));
        expectedHol.push(DateExt.UTC('7,Oct,2015'));
        expectedHol.push(DateExt.UTC('1,Jan,2016'));
        expectedHol.push(DateExt.UTC('8,Feb,2016'));
        expectedHol.push(DateExt.UTC('9,Feb,2016'));
        expectedHol.push(DateExt.UTC('10,Feb,2016'));
        expectedHol.push(DateExt.UTC('11,Feb,2016'));
        expectedHol.push(DateExt.UTC('12,Feb,2016'));
        expectedHol.push(DateExt.UTC('4,Apr,2016'));
        expectedHol.push(DateExt.UTC('2,May,2016'));
        expectedHol.push(DateExt.UTC('9,Jun,2016'));
        expectedHol.push(DateExt.UTC('10,Jun,2016'));
        expectedHol.push(DateExt.UTC('15,Sep,2016'));
        expectedHol.push(DateExt.UTC('16,Sep,2016'));
        expectedHol.push(DateExt.UTC('3,Oct,2016'));
        expectedHol.push(DateExt.UTC('4,Oct,2016'));
        expectedHol.push(DateExt.UTC('5,Oct,2016'));
        expectedHol.push(DateExt.UTC('6,Oct,2016'));
        expectedHol.push(DateExt.UTC('7,Oct,2016'));
        expectedHol.push(DateExt.UTC('2,Jan,2017'));
        expectedHol.push(DateExt.UTC('27,Jan,2017'));
        expectedHol.push(DateExt.UTC('30,Jan,2017'));
        expectedHol.push(DateExt.UTC('31,Jan,2017'));
        expectedHol.push(DateExt.UTC('1,Feb,2017'));
        expectedHol.push(DateExt.UTC('2,Feb,2017'));
        expectedHol.push(DateExt.UTC('3,April,2017'));
        expectedHol.push(DateExt.UTC('4,April,2017'));
        expectedHol.push(DateExt.UTC('1,May,2017'));
        expectedHol.push(DateExt.UTC('29,May,2017'));
        expectedHol.push(DateExt.UTC('30,May,2017'));
        expectedHol.push(DateExt.UTC('2,Oct,2017'));
        expectedHol.push(DateExt.UTC('3,Oct,2017'));
        expectedHol.push(DateExt.UTC('4,Oct,2017'));
        expectedHol.push(DateExt.UTC('5,Oct,2017'));
        expectedHol.push(DateExt.UTC('6,Oct,2017'));
        expectedHol.push(DateExt.UTC('1,Jan,2018'));
        expectedHol.push(DateExt.UTC('15,Feb,2018'));
        expectedHol.push(DateExt.UTC('16,Feb,2018'));
        expectedHol.push(DateExt.UTC('19,Feb,2018'));
        expectedHol.push(DateExt.UTC('20,Feb,2018'));
        expectedHol.push(DateExt.UTC('21,Feb,2018'));
        expectedHol.push(DateExt.UTC('5,April,2018'));
        expectedHol.push(DateExt.UTC('6,April,2018'));
        expectedHol.push(DateExt.UTC('30,April,2018'));
        expectedHol.push(DateExt.UTC('1,May,2018'));
        expectedHol.push(DateExt.UTC('18,June,2018'));
        expectedHol.push(DateExt.UTC('24,September,2018'));
        expectedHol.push(DateExt.UTC('1,Oct,2018'));
        expectedHol.push(DateExt.UTC('2,Oct,2018'));
        expectedHol.push(DateExt.UTC('3,Oct,2018'));
        expectedHol.push(DateExt.UTC('4,Oct,2018'));
        expectedHol.push(DateExt.UTC('5,Oct,2018'));
        const c = new China(China.Market.SSE);
        const hol = Calendar.holidayList(c, DateExt.UTC('1,January,2014'), DateExt.UTC('31,December,2018'));
        for (let i = 0; i < Math.min(hol.length, expectedHol.length); i++) {
            expect(hol[i].valueOf()).toEqual(expectedHol[i].valueOf());
        }
        expect(hol.length).toEqual(expectedHol.length);
    });

    it('Testing China Inter Bank working weekends list...', () => {
        const expectedWorkingWeekEnds = [];
        expectedWorkingWeekEnds.push(DateExt.UTC('26,Jan,2014'));
        expectedWorkingWeekEnds.push(DateExt.UTC('8,Feb,2014'));
        expectedWorkingWeekEnds.push(DateExt.UTC('4,May,2014'));
        expectedWorkingWeekEnds.push(DateExt.UTC('28,Sep,2014'));
        expectedWorkingWeekEnds.push(DateExt.UTC('11,Oct,2014'));
        expectedWorkingWeekEnds.push(DateExt.UTC('4,Jan,2015'));
        expectedWorkingWeekEnds.push(DateExt.UTC('15,Feb,2015'));
        expectedWorkingWeekEnds.push(DateExt.UTC('28,Feb,2015'));
        expectedWorkingWeekEnds.push(DateExt.UTC('6,Sep,2015'));
        expectedWorkingWeekEnds.push(DateExt.UTC('10,Oct,2015'));
        expectedWorkingWeekEnds.push(DateExt.UTC('6,Feb,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('14,Feb,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('12,Jun,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('18,Sep,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('8,Oct,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('9,Oct,2016'));
        expectedWorkingWeekEnds.push(DateExt.UTC('22,Jan,2017'));
        expectedWorkingWeekEnds.push(DateExt.UTC('4,Feb,2017'));
        expectedWorkingWeekEnds.push(DateExt.UTC('1,April,2017'));
        expectedWorkingWeekEnds.push(DateExt.UTC('27,May,2017'));
        expectedWorkingWeekEnds.push(DateExt.UTC('30,Sep,2017'));
        expectedWorkingWeekEnds.push(DateExt.UTC('11,Feb,2018'));
        expectedWorkingWeekEnds.push(DateExt.UTC('24,Feb,2018'));
        expectedWorkingWeekEnds.push(DateExt.UTC('8,April,2018'));
        expectedWorkingWeekEnds.push(DateExt.UTC('28,April,2018'));
        expectedWorkingWeekEnds.push(DateExt.UTC('29,Sep,2018'));
        expectedWorkingWeekEnds.push(DateExt.UTC('30,Sep,2018'));
        const c = new China(China.Market.IB);
        const start = DateExt.UTC('1,Jan,2014');
        const end = DateExt.UTC('31,Dec,2018');
        let k = 0;
        while (start.valueOf() <= end.valueOf()) {
            if (c.isBusinessDay(start) && c.isWeekend(DateExt.weekday(start))) {
                expect(expectedWorkingWeekEnds[k].valueOf()).toEqual(start.valueOf());
                ++k;
            }
            DateExt.adda(start, 1);
        }
        expect(k).toEqual(expectedWorkingWeekEnds.length);
    });

    it('Testing end-of-month calculation...', () => {
        const c = new TARGET();
        let eom;
        const counter = DateExt.minDate();
        const last = DateExt.advance(DateExt.maxDate(), -2, TimeUnit.Months);
        while (counter.valueOf() <= last.valueOf()) {
            eom = c.endOfMonth(counter);
            expect(c.isEndOfMonth(eom)).toBeTruthy();
            expect(DateExt.month(eom)).toEqual(DateExt.month(counter));
            DateExt.adda(counter, 1);
        }
    });

    it('Testing calculation of business days between dates...', () => {
        const testDates = [];
        testDates.push(DateExt.UTC('1,February,2002'));
        testDates.push(DateExt.UTC('4,February,2002'));
        testDates.push(DateExt.UTC('16,May,2003'));
        testDates.push(DateExt.UTC('17,December,2003'));
        testDates.push(DateExt.UTC('17,December,2004'));
        testDates.push(DateExt.UTC('19,December,2005'));
        testDates.push(DateExt.UTC('2,January,2006'));
        testDates.push(DateExt.UTC('13,March,2006'));
        testDates.push(DateExt.UTC('15,May,2006'));
        testDates.push(DateExt.UTC('17,March,2006'));
        testDates.push(DateExt.UTC('15,May,2006'));
        testDates.push(DateExt.UTC('26,July,2006'));
        const expected = [1, 321, 152, 251, 252, 10, 48, 42, -38, 38, 51];
        const calendar = new Brazil();
        for (let i = 1; i < testDates.length; i++) {
            const calculated = calendar.businessDaysBetween(testDates[i - 1], testDates[i]);
            expect(calculated).toEqual(expected[i - 1]);
        }
    });
    
    it('Testing bespoke calendars...', () => {
        const a1 = new BespokeCalendar();
        const b1 = new BespokeCalendar();
        const testDate1 = DateExt.UTC('4,October,2008');
        const testDate2 = DateExt.UTC('5,October,2008');
        const testDate3 = DateExt.UTC('6,October,2008');
        const testDate4 = DateExt.UTC('7,October,2008');
        expect(a1.isBusinessDay(testDate1)).toBeTruthy();
        expect(a1.isBusinessDay(testDate2)).toBeTruthy();
        expect(a1.isBusinessDay(testDate3)).toBeTruthy();
        expect(a1.isBusinessDay(testDate4)).toBeTruthy();
        expect(b1.isBusinessDay(testDate1)).toBeTruthy();
        expect(b1.isBusinessDay(testDate2)).toBeTruthy();
        expect(b1.isBusinessDay(testDate3)).toBeTruthy();
        expect(b1.isBusinessDay(testDate4)).toBeTruthy();
        a1.addWeekend(Weekday.Sunday);
        expect(a1.isBusinessDay(testDate1)).toBeTruthy();
        expect(a1.isBusinessDay(testDate2)).toBeFalsy();
        expect(a1.isBusinessDay(testDate3)).toBeTruthy();
        expect(a1.isBusinessDay(testDate4)).toBeTruthy();
        expect(b1.isBusinessDay(testDate1)).toBeTruthy();
        expect(b1.isBusinessDay(testDate2)).toBeTruthy();
        expect(b1.isBusinessDay(testDate3)).toBeTruthy();
        expect(b1.isBusinessDay(testDate4)).toBeTruthy();
        a1.addHoliday(testDate3);
        expect(a1.isBusinessDay(testDate1)).toBeTruthy();
        expect(a1.isBusinessDay(testDate2)).toBeFalsy();
        expect(a1.isBusinessDay(testDate3)).toBeFalsy();
        expect(a1.isBusinessDay(testDate4)).toBeTruthy();
        expect(b1.isBusinessDay(testDate1)).toBeTruthy();
        expect(b1.isBusinessDay(testDate2)).toBeTruthy();
        expect(b1.isBusinessDay(testDate3)).toBeTruthy();
        expect(b1.isBusinessDay(testDate4)).toBeTruthy();
    });
});